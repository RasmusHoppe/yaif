service:
  name: twitter
  icon: http://a2.twimg.com/a/1324402008/images/logos/twitter_newbird_boxed_blueonwhite.png
  description: twitter
  auth_type: oauth1a
  auth_data:
    key: input your key here
    secret: input your secret here
    consumer_params:
      auth_site: https://api.twitter.com
      access_site: http://api.twitter.com
      request_token_path: /oauth/request_token
      access_token_path: /oauth/access_token
      authorize_path: /oauth/authorize
      signature_method: HMAC-SHA1
      scheme: header
  helper: >
    def sort_urls(urls)
      urls.sort_by { |i| -i['indices'][0] }
    end

    def get_org_uri_tweet(tweet)
      urls = sort_urls tweet['entities']['urls']
      text = tweet['text']
      urls.each do |url|
        start = url['indices'][0]
        stop = url['indices'][1]
        stop -= 1 if text[stop] == ' '
        text[start..stop] = url['expanded_url']
      end
      text
    end

trigger:
- name: tweets
  description: users tweets
  http_type: oauth
  http_method: get
  period: "*/10 * * * *"
  in_keys: []
  source: https://api.twitter.com/1/statuses/user_timeline.json?include_entities=true&include_rts=true
  out_keys: [text, in_reply_to_user, source]
  content_to_hash: >
    parse_json content do |item|
      {
        :text => get_org_uri_tweet(item),
        :in_reply_to_user => item["in_reply_to_screen_name"],
        :source => item["source"].gsub(/<.*?>/, ''),
        :published => Time.parse(item["created_at"])
      }
    end

- name: tweets with special tags
  description: users tweets with special tags
  http_type: oauth
  http_method: get
  period: "*/10 * * * *"
  in_keys: [tags]
  source: https://api.twitter.com/1/statuses/user_timeline.json?include_entities=true&include_rts=true
  out_keys: [text, source]
  content_to_hash: >
    tags_pattern = Regexp.new "\#(#{tags.split(/[ ,]+/).join('|')})( |$)"

    ret = parse_json content do |item|
      {
        :text => get_org_uri_tweet(item),
        :source => item["source"].gsub(/<.*?>/, ''),
        :published => Time.parse(item["created_at"])
      }
    end

    ret.select { |i| i[:text].match tags_pattern }

action:
- name: tweet
  description: send a tweet
  http_type: oauth
  http_method: post
  in_keys: [status]
  target: /statuses/update.json
  body: >
    { :status => urlencode(status.strip) }

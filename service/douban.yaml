service:
  name: douban
  icon: http://img3.douban.com/pics/nav/lg_main_a7.png # or http://www.douban.com/favicon.png
  description: 豆瓣
  auth_type: oauth1
  auth_data:
    key: 0928d9d3dc6c5d801b7a8d7b95451880
    secret: 8d8ee3431d2c7fbe
    auth_site: http://www.douban.com
    access_site: http://api.douban.com
    request_token_source: /service/auth/request_token
    access_token_source: /service/auth/access_token
    authorize_source: /service/auth/authorize
    signature_method: HMAC-SHA1
    scheme: header
  helper: >
    def convert_douban_commit(content)
      content
    end

    def post_douban(paramss)
      ret = %q{<?xml version='1.0' encoding='UTF-8'?><entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:db="http://www.douban.com/xmlns/">}
      paramss.each do |k, v|
        ret += "<#{k}>#{v}</#{k}>"
      end
      ret += "</entry>"
    end

trigger:
  - name: 个人信息
    description: 个人在豆瓣的更新信息
    http_type: direct
    http_method: get
    in_keys: [name]
    source: http://www.douban.com/feed/people/#{name}/interests
    out_keys: [title, link, comment]
    content_to_hash: >
      convert_atom_to_json content

  - name: 书的评论
    description: 跟踪一本书的评论信息
    http_type: oauth
    http_method: get
    in_keys: [id]
    source: /book/subject/#{id}/reviews?alt=json
    out_keys: [title, link, comment]
    content_to_hash: >
      convert_douban_commit content

  - name: 我说
    description: 获得我说的信息
    http_type: oauth
    http_method: get
    in_keys:
    source: /miniblog/saying
    out_keys: [content, tags, links, users]
    content_to_hash: >
      content

action:
  - name: 我说
    description: 在豆瓣说上发表一条我说
    http_type: oauth
    http_method: post
    in_keys: [content]
    target: /miniblog/saying
    body: >
      post_douban :content => content

  - name: 删除我说
    description: 删除一条我说信息
    http_type: oauth
    http_method: delete
    in_keys: [id]
    target: /miniblog/#{id}
    body: >
      nil
